{
  "pluginAlias": "Govee",
  "pluginType": "platform",
  "singular": true,
  "customUi": true,
  "customUiPath": "./lib/homebridge-ui",
  "headerDisplay": "<p align=\"center\"><img width=\"60%\" src=\"https://user-images.githubusercontent.com/43026681/101324574-5e997d80-3862-11eb-81b0-932330f6e242.png\"></p><p align=\"center\">For help and support please visit our <a href=\"https://github.com/bwp91/homebridge-govee/wiki\">GitHub Wiki</a>. We hope you find this plugin useful!</p>",
  "schema": {
    "type": "object",
    "properties": {
      "name": {
        "title": "Plugin Name",
        "type": "string",
        "default": "Govee"
      },
      "username": {
        "type": "string",
        "title": "Govee Username",
        "description": "Required for most device models and for AWS/BLE connections. <a href=\"https://github.com/bwp91/homebridge-govee/wiki/Supported-Devices\" target=\"_blank\">Read more →</a>"
      },
      "password": {
        "type": "string",
        "title": "Govee Password",
        "description": "Required for certain light models. <a href=\"https://github.com/bwp91/homebridge-govee/wiki/Supported-Devices\" target=\"_blank\">Read more →</a>"
      },
      "apiKey": {
        "type": "string",
        "title": "Govee API Key",
        "description": "Required to enable support for API devices. You can obtain your API key using <a href=\"https://github.com/bwp91/homebridge-govee/wiki/Configuration#obtaining-your-api-key\" target=\"_blank\">this guide</a>."
      },
      "refreshTime": {
        "title": "Refresh Interval",
        "type": "integer",
        "description": "An interval (in seconds) in which your API devices will refresh with Govee. Must be 15 or more.",
        "placeholder": 15,
        "minimum": 15
      },
      "controlInterval": {
        "title": "Control Interval",
        "type": "integer",
        "description": "A minimum delay (in milliseconds) between device updates being sent. Increasing this may help if you find device updates are not working or if you use HomeKit scenes/groupings. Must be 500 or more.",
        "placeholder": 500,
        "minimum": 500
      },
      "disableDeviceLogging": {
        "type": "boolean",
        "title": "Disable Device Logging",
        "description": "Global logging setting for accessory status changes. If true then accessory status changes will not be logged. This can also be set per accessory later in the config."
      },
      "debug": {
        "title": "Debug Logging",
        "type": "boolean",
        "description": "Global logging setting for the plugin. If true then debug information will be added to the log. This can also be set per accessory later in the config."
      },
      "debugFakegato": {
        "title": "Debug Fakegato",
        "type": "boolean",
        "description": "If true, the included Fakegato library will debug to the log."
      },
      "disablePlugin": {
        "title": "Disable Plugin",
        "type": "boolean",
        "description": "If true, the plugin will remove all accessories and not load the plugin on restart."
      },
      "lightDevices": {
        "title": "Light Devices",
        "description": "Optional settings for Govee Light devices.",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "label": {
              "title": "Label",
              "type": "string",
              "description": "This setting has no effect except to help identify this device."
            },
            "deviceId": {
              "title": "Device ID",
              "type": "string",
              "description": "Enter the 23 digit Govee Device ID to begin (e.g. 12:AB:A1:C5:A8:99:D2:17).",
              "minLength": 23,
              "maxLength": 23
            },
            "isRGBIC": {
              "title": "Is RGBIC model?",
              "type": "boolean",
              "description": "Is this light individually addressable or solid color only?",
              "condition": {
                "functionBody": "return (model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23);"
              }
            },
            "ignoreDevice": {
              "type": "boolean",
              "title": "Hide From HomeKit",
              "description": "If true, this accessory will be removed and ignored from HomeKit.",
              "condition": {
                "functionBody": "return (model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23);"
              }
            },
            "enableAWS": {
              "title": "Enable AWS Control",
              "type": "boolean",
              "description": "[Experimental!] If true, the plugin will try and control this device via AWS if available.",
              "condition": {
                "functionBody": "return (model.username && model.password && model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23 && !model.lightDevices[arrayIndices].ignoreDevice);"
              }
            },
            "enableBT": {
              "title": "Enable BLE Control",
              "type": "boolean",
              "description": "[Experimental!] If true, the plugin will try and control this device via bluetooth if available.",
              "condition": {
                "functionBody": "return (model.username && model.password && model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23 && !model.lightDevices[arrayIndices].ignoreDevice);"
              }
            },
            "brightnessStep": {
              "title": "Brightness Step",
              "type": "integer",
              "description": "A minimum step for the brightness slider in the Home app. Must be 1 or more.",
              "placeholder": 1,
              "minimum": 1,
              "condition": {
                "functionBody": "return (model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23 && !model.lightDevices[arrayIndices].ignoreDevice);"
              }
            },
            "adaptiveLightingShift": {
              "title": "Adaptive Lighting Shift",
              "type": "integer",
              "description": "The mired for each Adaptive Lighting update will be increased by this value, making the light appear warmer. Set to -1 to remove Adaptive Lighting feature. Must be -1 or more.",
              "placeholder": 0,
              "minimum": -1,
              "condition": {
                "functionBody": "return (model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23 && !model.lightDevices[arrayIndices].ignoreDevice);"
              }
            },
            "sunrise": {
              "title": "Sunrise",
              "type": "boolean"
            },
            "sunset": {
              "title": "Sunset",
              "type": "boolean"
            },
            "forest": {
              "title": "forest",
              "type": "boolean"
            },
            "rustlingLeaves": {
              "title": "Rustling Leaves",
              "type": "boolean"
            },
            "universe": {
              "title": "Universe",
              "type": "boolean"
            },
            "meteor": {
              "title": "Meteor",
              "type": "boolean"
            },
            "meteorShower": {
              "title": "Meteor Shower",
              "type": "boolean"
            },
            "aurora": {
              "title": "Aurora",
              "type": "boolean"
            },
            "starrySky": {
              "title": "Starry Sky",
              "type": "boolean"
            },
            "star": {
              "title": "Star",
              "type": "boolean"
            },
            "snowFlake": {
              "title": "Snow Flake",
              "type": "boolean"
            },
            "spring": {
              "title": "Spring",
              "type": "boolean"
            },
            "summer": {
              "title": "Summer",
              "type": "boolean"
            },
            "winter": {
              "title": "Winter",
              "type": "boolean"
            },
            "rainbow": {
              "title": "Rainbow",
              "type": "boolean"
            },
            "ripple": {
              "title": "Ripple",
              "type": "boolean"
            },
            "surge": {
              "title": "Surge",
              "type": "boolean"
            },
            "deepSea": {
              "title": "Deep Sea",
              "type": "boolean"
            },
            "newYears": {
              "title": "New Years",
              "type": "boolean"
            },
            "christmas": {
              "title": "Christmas",
              "type": "boolean"
            },
            "halloween": {
              "title": "Halloween",
              "type": "boolean"
            },
            "valentinesDay": {
              "title": "Valentine's Day",
              "type": "boolean"
            },
            "candlelight": {
              "title": "Candlelight",
              "type": "boolean"
            },
            "birthday": {
              "title": "Birthday",
              "type": "boolean"
            },
            "fireworks": {
              "title": "Fireworks",
              "type": "boolean"
            },
            "ghost": {
              "title": "Ghost",
              "type": "boolean"
            },
            "party": {
              "title": "Party",
              "type": "boolean"
            },
            "danceParty": {
              "title": "Dance Party",
              "type": "boolean"
            },
            "disco": {
              "title": "Disco",
              "type": "boolean"
            },
            "carnival": {
              "title": "Carnival",
              "type": "boolean"
            },
            "mothersDay": {
              "title": "Mother's Day",
              "type": "boolean"
            },
            "fathersDay": {
              "title": "Father's Day",
              "type": "boolean"
            },
            "scene": {
              "title": "Scene",
              "type": "string",
              "description": "[Experimental!] Enter an AWS code (from logs) or a bluetooth code to create a button named 'Scene' (in Eve app).",
              "condition": {
                "functionBody": "return (model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23 && !model.lightDevices[arrayIndices].ignoreDevice && (model.lightDevices[arrayIndices].enableAWS || model.lightDevices[arrayIndices].enableBT));"
              }
            },
            "sceneTwo": {
              "title": "Scene 2",
              "type": "string",
              "description": "[Experimental!] Enter an AWS code (from logs) or a bluetooth code to create a button named 'Scene 2' (in Eve app).",
              "condition": {
                "functionBody": "return (model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23 && !model.lightDevices[arrayIndices].ignoreDevice && (model.lightDevices[arrayIndices].enableAWS || model.lightDevices[arrayIndices].enableBT));"
              }
            },
            "musicMode": {
              "title": "Music Mode",
              "type": "string",
              "description": "[Experimental!] Enter an AWS code (from logs) or a bluetooth code to create a button named 'Music Mode' (in Eve app).",
              "condition": {
                "functionBody": "return (model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23 && !model.lightDevices[arrayIndices].ignoreDevice && (model.lightDevices[arrayIndices].enableAWS || model.lightDevices[arrayIndices].enableBT));"
              }
            },
            "musicModeTwo": {
              "title": "Music Mode 2",
              "type": "string",
              "description": "[Experimental!] Enter an AWS code (from logs) or a bluetooth code to create a button named 'Music Mode 2' (in Eve app).",
              "condition": {
                "functionBody": "return (model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23 && !model.lightDevices[arrayIndices].ignoreDevice && (model.lightDevices[arrayIndices].enableAWS || model.lightDevices[arrayIndices].enableBT));"
              }
            },
            "diyMode": {
              "title": "DIY Mode",
              "type": "string",
              "description": "[Experimental!] Enter an AWS code (from logs) or a bluetooth code to create a button named 'DIY Mode' (in Eve app).",
              "condition": {
                "functionBody": "return (model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23 && !model.lightDevices[arrayIndices].ignoreDevice && (model.lightDevices[arrayIndices].enableAWS || model.lightDevices[arrayIndices].enableBT));"
              }
            },
            "diyModeTwo": {
              "title": "DIY Mode 2",
              "type": "string",
              "description": "[Experimental!] Enter an AWS code (from logs) or a bluetooth code to create a button named 'DIY Mode 2' (in Eve app).",
              "condition": {
                "functionBody": "return (model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23 && !model.lightDevices[arrayIndices].ignoreDevice && (model.lightDevices[arrayIndices].enableAWS || model.lightDevices[arrayIndices].enableBT));"
              }
            },
            "overrideLogging": {
              "type": "string",
              "title": "Override Logging Setting",
              "description": "Override global logging setting for this device.",
              "oneOf": [
                {
                  "title": "Default (Use Global Setting)",
                  "enum": ["default"]
                },
                {
                  "title": "Enable Standard Logging",
                  "enum": ["standard"]
                },
                {
                  "title": "Enable Debug Logging",
                  "enum": ["debug"]
                },
                {
                  "title": "Disable All Logging",
                  "enum": ["disable"]
                }
              ],
              "condition": {
                "functionBody": "return (model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23 && !model.lightDevices[arrayIndices].ignoreDevice);"
              }
            }
          }
        }
      },
      "switchDevices": {
        "title": "Outlet Devices",
        "description": "Optional settings for Govee Outlet devices.",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "label": {
              "title": "Label",
              "type": "string",
              "description": "This setting has no effect except to help identify this device."
            },
            "deviceId": {
              "title": "Device ID",
              "type": "string",
              "description": "Enter the 23 digit Govee Device ID to begin (e.g. 12:AB:A1:C5:A8:99:D2:17).",
              "minLength": 23,
              "maxLength": 23
            },
            "ignoreDevice": {
              "type": "boolean",
              "title": "Hide From HomeKit",
              "description": "If true, this accessory will be removed and ignored from HomeKit.",
              "condition": {
                "functionBody": "return (model.switchDevices && model.switchDevices[arrayIndices] && model.switchDevices[arrayIndices].deviceId && model.switchDevices[arrayIndices].deviceId.length === 23);"
              }
            },
            "enableAWS": {
              "title": "Enable AWS Control",
              "type": "boolean",
              "description": "[Experimental!] If true, the plugin will try and control this device via AWS.",
              "condition": {
                "functionBody": "return (model.username && model.password && model.switchDevices && model.switchDevices[arrayIndices] && model.switchDevices[arrayIndices].deviceId && model.switchDevices[arrayIndices].deviceId.length === 23 && !model.switchDevices[arrayIndices].ignoreDevice);"
              }
            },
            "showAs": {
              "type": "string",
              "title": "Show As",
              "oneOf": [
                {
                  "title": "Outlet (Default)",
                  "enum": ["default"]
                },
                {
                  "title": "Switch",
                  "enum": ["switch"]
                },
                {
                  "title": "Air Purifier",
                  "enum": ["purifier"]
                }
              ],
              "condition": {
                "functionBody": "return (model.switchDevices && model.switchDevices[arrayIndices] && model.switchDevices[arrayIndices].deviceId && model.switchDevices[arrayIndices].deviceId.length === 23 && !model.switchDevices[arrayIndices].ignoreDevice);"
              }
            },
            "overrideLogging": {
              "type": "string",
              "title": "Override Logging Setting",
              "description": "Override global logging setting for this device.",
              "oneOf": [
                {
                  "title": "Default (Use Global Setting)",
                  "enum": ["default"]
                },
                {
                  "title": "Enable Standard Logging",
                  "enum": ["standard"]
                },
                {
                  "title": "Enable Debug Logging",
                  "enum": ["debug"]
                },
                {
                  "title": "Disable All Logging",
                  "enum": ["disable"]
                }
              ],
              "condition": {
                "functionBody": "return (model.switchDevices && model.switchDevices[arrayIndices] && model.switchDevices[arrayIndices].deviceId && model.switchDevices[arrayIndices].deviceId.length === 23 && !model.switchDevices[arrayIndices].ignoreDevice);"
              }
            }
          }
        }
      },
      "leakDevices": {
        "title": "Leak Sensor Devices",
        "description": "Optional settings for Govee Leak Sensor devices.",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "label": {
              "title": "Label",
              "type": "string",
              "description": "This setting has no effect except to help identify this device."
            },
            "deviceId": {
              "title": "Device ID",
              "type": "string",
              "description": "Enter the 18 digit Govee Device ID to begin (e.g. 12AB34CD56EF78009F).",
              "minLength": 18,
              "maxLength": 18
            },
            "ignoreDevice": {
              "type": "boolean",
              "title": "Hide From HomeKit",
              "description": "If true, this accessory will be removed and ignored from HomeKit.",
              "condition": {
                "functionBody": "return (model.leakDevices && model.leakDevices[arrayIndices] && model.leakDevices[arrayIndices].deviceId && model.leakDevices[arrayIndices].deviceId.length === 18);"
              }
            },
            "lowBattThreshold": {
              "type": "integer",
              "title": "Low Battery Threshold",
              "description": "HomeKit will set the low battery status for this device when the battery reaches this percentage level. Must be 1 or more.",
              "placeholder": 20,
              "minimum": 1,
              "condition": {
                "functionBody": "return (model.leakDevices && model.leakDevices[arrayIndices] && model.leakDevices[arrayIndices].deviceId && model.leakDevices[arrayIndices].deviceId.length === 18 && !model.leakDevices[arrayIndices].ignoreDevice);"
              }
            },
            "overrideLogging": {
              "type": "string",
              "title": "Override Logging Setting",
              "description": "Override global logging setting for this device.",
              "oneOf": [
                {
                  "title": "Default (Use Global Setting)",
                  "enum": ["default"]
                },
                {
                  "title": "Enable Standard Logging",
                  "enum": ["standard"]
                },
                {
                  "title": "Enable Debug Logging",
                  "enum": ["debug"]
                },
                {
                  "title": "Disable All Logging",
                  "enum": ["disable"]
                }
              ],
              "condition": {
                "functionBody": "return (model.leakDevices && model.leakDevices[arrayIndices] && model.leakDevices[arrayIndices].deviceId && model.leakDevices[arrayIndices].deviceId.length === 18 && !model.leakDevices[arrayIndices].ignoreDevice);"
              }
            }
          }
        }
      },
      "thermoDevices": {
        "title": "Thermo Sensor Devices",
        "description": "Optional settings for Govee Thermo-Hygrometer devices.",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "label": {
              "title": "Label",
              "type": "string",
              "description": "This setting has no effect except to help identify this device."
            },
            "deviceId": {
              "title": "Device ID",
              "type": "string",
              "description": "Enter the 23 digit Govee Device ID to begin (e.g. 12:AB:A1:C5:A8:99:D2:17).",
              "minLength": 23,
              "maxLength": 23
            },
            "ignoreDevice": {
              "type": "boolean",
              "title": "Hide From HomeKit",
              "description": "If true, this accessory will be removed and ignored from HomeKit.",
              "condition": {
                "functionBody": "return (model.thermoDevices && model.thermoDevices[arrayIndices] && model.thermoDevices[arrayIndices].deviceId && model.thermoDevices[arrayIndices].deviceId.length === 23);"
              }
            },
            "lowBattThreshold": {
              "type": "integer",
              "title": "Low Battery Threshold",
              "description": "HomeKit will set the low battery status for this device when the battery reaches this percentage level. Must be 1 or more.",
              "placeholder": 20,
              "minimum": 1,
              "condition": {
                "functionBody": "return (model.thermoDevices && model.thermoDevices[arrayIndices] && model.thermoDevices[arrayIndices].deviceId && model.thermoDevices[arrayIndices].deviceId.length === 23 && !model.thermoDevices[arrayIndices].ignoreDevice);"
              }
            },
            "overrideLogging": {
              "type": "string",
              "title": "Override Logging Setting",
              "description": "Override global logging setting for this device.",
              "oneOf": [
                {
                  "title": "Default (Use Global Setting)",
                  "enum": ["default"]
                },
                {
                  "title": "Enable Standard Logging",
                  "enum": ["standard"]
                },
                {
                  "title": "Enable Debug Logging",
                  "enum": ["debug"]
                },
                {
                  "title": "Disable All Logging",
                  "enum": ["disable"]
                }
              ],
              "condition": {
                "functionBody": "return (model.thermoDevices && model.thermoDevices[arrayIndices] && model.thermoDevices[arrayIndices].deviceId && model.thermoDevices[arrayIndices].deviceId.length === 23 && !model.thermoDevices[arrayIndices].ignoreDevice);"
              }
            }
          }
        }
      }
    }
  },
  "layout": [
    {
      "type": "fieldset",
      "title": "Required Settings",
      "items": ["username", "password", "apiKey"]
    },
    {
      "type": "fieldset",
      "title": "Optional Settings",
      "description": "Optional settings for the plugin, including refreshing and global logging settings.",
      "expandable": true,
      "items": ["refreshTime", "controlInterval", "disableDeviceLogging", "debug", "disablePlugin"]
    },
    {
      "key": "lightDevices",
      "expandable": true,
      "title": "Light Devices",
      "description": "Optional settings for Govee Light devices.",
      "add": "Add Another Device",
      "type": "array",
      "items": [
        {
          "type": "fieldset",
          "items": [
            "lightDevices[].label",
            "lightDevices[].deviceId",
            "lightDevices[].isRGBIC",
            "lightDevices[].ignoreDevice",
            "lightDevices[].enableAWS",
            "lightDevices[].enableBT",
            "lightDevices[].brightnessStep",
            "lightDevices[].adaptiveLightingShift",
            {
              "expandable": true,
              "title": "Custom Scenes/Modes",
              "type": "fieldset",
              "description": "Use these settings to start creating HomeKit scenes with your Govee scenes, music mode and DIY modes. These options are only available if 'Enable AWS Control' or 'Enable BLE Control' is selected above. <a href=\"https://github.com/bwp91/homebridge-govee/wiki/Scene%2C-Music%2C-DIY-Modes\" target=\"_blank\">Read more →</a>",
              "items": [
                "lightDevices[].sunrise",
                "lightDevices[].sunset",
                "lightDevices[].forest",
                "lightDevices[].rustlingLeaves",
                "lightDevices[].universe",
                "lightDevices[].meteor",
                "lightDevices[].meteorShower",
                "lightDevices[].aurora",
                "lightDevices[].starrySky",
                "lightDevices[].star",
                "lightDevices[].snowFlake",
                "lightDevices[].spring",
                "lightDevices[].summer",
                "lightDevices[].winter",
                "lightDevices[].rainbow",
                "lightDevices[].ripple",
                "lightDevices[].surge",
                "lightDevices[].deepSea",
                "lightDevices[].newYears",
                "lightDevices[].christmas",
                "lightDevices[].halloween",
                "lightDevices[].valentinesDay",
                "lightDevices[].candlelight",
                "lightDevices[].birthday",
                "lightDevices[].fireworks",
                "lightDevices[].ghost",
                "lightDevices[].party",
                "lightDevices[].danceParty",
                "lightDevices[].disco",
                "lightDevices[].carnival",
                "lightDevices[].mothersDay",
                "lightDevices[].fathersDay",
                "lightDevices[].scene",
                "lightDevices[].sceneTwo",
                "lightDevices[].musicMode",
                "lightDevices[].musicModeTwo",
                "lightDevices[].diyMode",
                "lightDevices[].diyModeTwo"
              ]
            },
            "lightDevices[].overrideLogging"
          ]
        }
      ]
    },
    {
      "key": "switchDevices",
      "expandable": true,
      "title": "Outlet Devices",
      "description": "Optional settings for Govee Outlet devices.",
      "add": "Add Another Device",
      "type": "array",
      "items": [
        {
          "type": "fieldset",
          "items": [
            "switchDevices[].label",
            "switchDevices[].deviceId",
            "switchDevices[].ignoreDevice",
            "switchDevices[].enableAWS",
            "switchDevices[].showAs",
            "switchDevices[].overrideLogging"
          ]
        }
      ]
    },
    {
      "key": "leakDevices",
      "expandable": true,
      "title": "Leak Sensor Devices",
      "description": "Optional settings for Govee Leak Sensor devices.",
      "add": "Add Another Device",
      "type": "array",
      "items": [
        {
          "type": "fieldset",
          "items": [
            "leakDevices[].label",
            "leakDevices[].deviceId",
            "leakDevices[].lowBattThreshold",
            "leakDevices[].ignoreDevice",
            "leakDevices[].overrideLogging"
          ]
        }
      ]
    },
    {
      "key": "thermoDevices",
      "expandable": true,
      "title": "Thermo Sensor Devices",
      "description": "Optional settings for Govee Thermo-Hygrometer devices.",
      "add": "Add Another Device",
      "type": "array",
      "items": [
        {
          "type": "fieldset",
          "items": [
            "thermoDevices[].label",
            "thermoDevices[].deviceId",
            "thermoDevices[].ignoreDevice",
            "thermoDevices[].lowBattThreshold",
            "thermoDevices[].overrideLogging"
          ]
        }
      ]
    }
  ]
}
