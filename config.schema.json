{
  "pluginAlias": "Govee",
  "pluginType": "platform",
  "singular": true,
  "customUi": true,
  "customUiPath": "./lib/homebridge-ui",
  "headerDisplay": "<p align=\"center\"><img width=\"60%\" src=\"https://user-images.githubusercontent.com/43026681/101324574-5e997d80-3862-11eb-81b0-932330f6e242.png\"></p><p align=\"center\">For help and support please visit our <a href=\"https://github.com/bwp91/homebridge-govee/wiki\">GitHub Wiki</a>. We hope you find this plugin useful!</p>",
  "schema": {
    "type": "object",
    "properties": {
      "name": {
        "title": "Plugin Name",
        "type": "string",
        "default": "Govee"
      },
      "username": {
        "type": "string",
        "title": "Govee Email",
        "description": "Required for most device models and for AWS/BLE connections. <a href=\"https://github.com/bwp91/homebridge-govee/wiki/Supported-Devices\" target=\"_blank\">Read more →</a>"
      },
      "password": {
        "type": "string",
        "title": "Govee Password",
        "description": "Required for certain light models. <a href=\"https://github.com/bwp91/homebridge-govee/wiki/Supported-Devices\" target=\"_blank\">Read more →</a>"
      },
      "httpRefreshTime": {
        "title": "HTTP Refresh Interval",
        "type": "integer",
        "description": "An interval (in seconds) in which your HTTP devices will refresh with the plugin. Must be 30 or more.",
        "placeholder": 30,
        "minimum": 30
      },
      "awsDisable": {
        "title": "Disable AWS",
        "type": "boolean",
        "description": "If enabled, the plugin will not set up AWS discovery and control."
      },
      "bleDisable": {
        "title": "Disable BLE",
        "type": "boolean",
        "description": "If enabled, the plugin will not set up BLE discovery and control."
      },
      "bleRefreshTime": {
        "title": "BLE Refresh Interval",
        "type": "integer",
        "description": "An interval (in seconds) in which your BLE devices will refresh with the plugin. Must be 60 or more.",
        "placeholder": 300,
        "minimum": 60,
        "condition": {
          "functionBody": "return (!model.bleDisable);"
        }
      },
      "lanDisable": {
        "title": "Disable LAN",
        "type": "boolean",
        "description": "If enabled, the plugin will not set up LAN discovery and control."
      },
      "lanRefreshTime": {
        "title": "LAN Refresh Interval",
        "type": "integer",
        "description": "An interval (in seconds) in which your LAN devices will refresh with the plugin. Must be 10 or more.",
        "placeholder": 30,
        "minimum": 10,
        "condition": {
          "functionBody": "return (!model.lanDisable);"
        }
      },
      "lanScanInterval": {
        "title": "LAN Scan Interval",
        "type": "integer",
        "description": "An interval (in seconds) in which a the plugin will scan your network for devices. Must be 30 or more.",
        "placeholder": 60,
        "minimum": 30,
        "condition": {
          "functionBody": "return (!model.lanDisable);"
        }
      },
      "bleControlInterval": {
        "title": "BLE Control Interval",
        "type": "integer",
        "description": "A minimum delay (in seconds) between device updates being sent. Increasing this may help if you find device updates are not working or if you use HomeKit scenes/groupings. Must be 5 or more.",
        "placeholder": 5,
        "minimum": 5
      },
      "colourSafeMode": {
        "type": "boolean",
        "title": "Colour Safe Mode",
        "description": "If true then the plugin will not add colour temperature characteristic to lights."
      },
      "disableDeviceLogging": {
        "type": "boolean",
        "title": "Disable Device Logging",
        "description": "Global logging setting for accessory status changes. If true then accessory status changes will not be logged. This can also be set per accessory later in the config."
      },
      "lightDevices": {
        "title": "Light Devices",
        "description": "Optional settings for Govee Light devices.",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "label": {
              "title": "Label",
              "type": "string",
              "description": "This setting is only used for naming LAN-only accessories and config identification."
            },
            "deviceId": {
              "title": "Device ID",
              "type": "string",
              "description": "Enter the 23 digit Govee Device ID to begin (e.g. 12:AB:A1:C5:A8:99:D2:17).",
              "minLength": 23,
              "maxLength": 23
            },
            "ignoreDevice": {
              "type": "boolean",
              "title": "Hide From HomeKit",
              "description": "If true, this accessory will be removed and ignored from HomeKit.",
              "condition": {
                "functionBody": "return (model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23);"
              }
            },
            "showAs": {
              "type": "string",
              "title": "Show As",
              "oneOf": [
                {
                  "title": "1 Light (Default)",
                  "enum": [
                    "default"
                  ]
                },
                {
                  "title": "1 Switch",
                  "enum": [
                    "switch"
                  ]
                }
              ],
              "condition": {
                "functionBody": "return (model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23 && !model.lightDevices[arrayIndices].ignoreDevice);"
              }
            },
            "customAddress": {
              "title": "Custom Bluetooth Address",
              "type": "string",
              "placeholder": "a1:b2:c3:d4:e5:f6",
              "description": "The plugin may not be able to determine the bluetooth address of some older models. <a href=\"https://github.com/bwp91/homebridge-govee/wiki/Bluetooth-Control#finding-the-bluetooth-address\" target=\"_blank\">Read more →</a>",
              "minLength": 17,
              "maxLength": 17,
              "condition": {
                "functionBody": "return (!model.bleDisable && model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23 && !model.lightDevices[arrayIndices].ignoreDevice);"
              }
            },
            "customIPAddress": {
              "title": "Custom IP Address",
              "type": "string",
              "placeholder": "192.168.1.15",
              "description": "A fixed IP address for LAN mode, if the plugin cannot auto-discover this device.",
              "minLength": 7,
              "condition": {
                "functionBody": "return (!model.lanDisable && model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23 && !model.lightDevices[arrayIndices].ignoreDevice);"
              }
            },
            "brightnessStep": {
              "title": "Brightness Step",
              "type": "integer",
              "description": "A minimum step for the brightness slider in the Home app. Must be 1 or more.",
              "placeholder": 1,
              "minimum": 1,
              "condition": {
                "functionBody": "return (model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23 && !['switch'].includes(model.lightDevices[arrayIndices].showAs) && !model.lightDevices[arrayIndices].ignoreDevice);"
              }
            },
            "awsBrightnessNoScale": {
              "type": "boolean",
              "title": "AWS Brightness No Scale",
              "description": "If true, the brightness value sent to/from via AWS will not be scaled to 0-100.",
              "condition": {
                "functionBody": "return (model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23 && !['switch'].includes(model.lightDevices[arrayIndices].showAs) && !model.lightDevices[arrayIndices].ignoreDevice);"
              }
            },
            "adaptiveLightingShift": {
              "title": "Adaptive Lighting Shift",
              "type": "integer",
              "description": "The mired for each Adaptive Lighting update will be increased by this value, making the light appear warmer. Set to -1 to remove Adaptive Lighting feature. Must be -1 or more.",
              "placeholder": 0,
              "minimum": -1,
              "condition": {
                "functionBody": "return (model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23 && !['switch'].includes(model.lightDevices[arrayIndices].showAs) && !model.lightDevices[arrayIndices].ignoreDevice);"
              }
            },
            "awsColourMode": {
              "type": "string",
              "title": "AWS Colour Mode",
              "oneOf": [
                {
                  "title": "colorwc (Default)",
                  "enum": [
                    "default"
                  ]
                },
                {
                  "title": "{r, g, b}",
                  "enum": [
                    "rgb"
                  ]
                },
                {
                  "title": "{red, green, blue}",
                  "enum": [
                    "redgreenblue"
                  ]
                }
              ],
              "condition": {
                "functionBody": "return (model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23 && !['switch'].includes(model.lightDevices[arrayIndices].showAs) && !model.lightDevices[arrayIndices].ignoreDevice);"
              }
            },
            "scene": {
              "title": "Scene",
              "type": "object",
              "properties": {
                "sceneCode": {
                  "title": "Scene (AWS): Scene Code",
                  "type": "string",
                  "description": "Enter a scene code from the logs to create a button named 'Scene' (in Eve app).",
                  "condition": {
                    "functionBody": "return (model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23 && !['switch'].includes(model.lightDevices[arrayIndices].showAs) && !model.lightDevices[arrayIndices].ignoreDevice);"
                  }
                },
                "bleCode": {
                  "title": "Scene (BLE): Scene Code",
                  "type": "string",
                  "description": "Can be (1) left blank, (2) used instead of, or (3) used along with the above AWS code. In the case of (3) please make sure both codes correspond to the same Govee mode.",
                  "condition": {
                    "functionBody": "return (model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23 && !['switch'].includes(model.lightDevices[arrayIndices].showAs) && !model.lightDevices[arrayIndices].ignoreDevice);"
                  }
                },
                "showAs": {
                  "type": "string",
                  "title": "Scene: Show As",
                  "description": "Change this setting to Accessory Switch to show this as an extra switch in the Home app.",
                  "oneOf": [
                    {
                      "title": "Eve Switch (Default)",
                      "enum": [
                        "default"
                      ]
                    },
                    {
                      "title": "Accessory Switch",
                      "enum": [
                        "switch"
                      ]
                    }
                  ],
                  "condition": {
                    "functionBody": "return (model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23 && !['switch'].includes(model.lightDevices[arrayIndices].showAs) && !model.lightDevices[arrayIndices].ignoreDevice && model.lightDevices[arrayIndices].scene && (model.lightDevices[arrayIndices].scene.sceneCode || model.lightDevices[arrayIndices].scene.bleCode));"
                  }
                }
              }
            },
            "sceneTwo": {
              "title": "Scene 2",
              "type": "object",
              "properties": {
                "sceneCode": {
                  "title": "Scene 2 (AWS): Scene Code",
                  "type": "string",
                  "description": "Enter a scene code from the logs to create a button named 'Scene 2' (in Eve app).",
                  "condition": {
                    "functionBody": "return (model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23 && !['switch'].includes(model.lightDevices[arrayIndices].showAs) && !model.lightDevices[arrayIndices].ignoreDevice);"
                  }
                },
                "bleCode": {
                  "title": "Scene 2 (BLE): Scene Code",
                  "type": "string",
                  "description": "Can be (1) left blank, (2) used instead of, or (3) used along with the above AWS code. In the case of (3) please make sure both codes correspond to the same Govee mode.",
                  "condition": {
                    "functionBody": "return (model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23 && !['switch'].includes(model.lightDevices[arrayIndices].showAs) && !model.lightDevices[arrayIndices].ignoreDevice);"
                  }
                },
                "showAs": {
                  "type": "string",
                  "title": "Scene 2: Show As",
                  "description": "Change this setting to Accessory Switch to show this as an extra switch in the Home app.",
                  "oneOf": [
                    {
                      "title": "Eve Switch (Default)",
                      "enum": [
                        "default"
                      ]
                    },
                    {
                      "title": "Accessory Switch",
                      "enum": [
                        "switch"
                      ]
                    }
                  ],
                  "condition": {
                    "functionBody": "return (model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23 && !['switch'].includes(model.lightDevices[arrayIndices].showAs) && !model.lightDevices[arrayIndices].ignoreDevice && model.lightDevices[arrayIndices].sceneTwo && (model.lightDevices[arrayIndices].sceneTwo.sceneCode || model.lightDevices[arrayIndices].sceneTwo.bleCode));"
                  }
                }
              }
            },
            "sceneThree": {
              "title": "Scene 3",
              "type": "object",
              "properties": {
                "sceneCode": {
                  "title": "Scene 3 (AWS): Scene Code",
                  "type": "string",
                  "description": "Enter a scene code from the logs to create a button named 'Scene 3' (in Eve app).",
                  "condition": {
                    "functionBody": "return (model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23 && !['switch'].includes(model.lightDevices[arrayIndices].showAs) && !model.lightDevices[arrayIndices].ignoreDevice);"
                  }
                },
                "bleCode": {
                  "title": "Scene 3 (BLE): Scene Code",
                  "type": "string",
                  "description": "Can be (1) left blank, (2) used instead of, or (3) used along with the above AWS code. In the case of (3) please make sure both codes correspond to the same Govee mode.",
                  "condition": {
                    "functionBody": "return (model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23 && !['switch'].includes(model.lightDevices[arrayIndices].showAs) && !model.lightDevices[arrayIndices].ignoreDevice);"
                  }
                },
                "showAs": {
                  "type": "string",
                  "title": "Scene 3: Show As",
                  "description": "Change this setting to Accessory Switch to show this as an extra switch in the Home app.",
                  "oneOf": [
                    {
                      "title": "Eve Switch (Default)",
                      "enum": [
                        "default"
                      ]
                    },
                    {
                      "title": "Accessory Switch",
                      "enum": [
                        "switch"
                      ]
                    }
                  ],
                  "condition": {
                    "functionBody": "return (model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23 && !['switch'].includes(model.lightDevices[arrayIndices].showAs) && !model.lightDevices[arrayIndices].ignoreDevice && model.lightDevices[arrayIndices].sceneThree && (model.lightDevices[arrayIndices].sceneThree.sceneCode || model.lightDevices[arrayIndices].sceneThree.bleCode));"
                  }
                }
              }
            },
            "sceneFour": {
              "title": "Scene 4",
              "type": "object",
              "properties": {
                "sceneCode": {
                  "title": "Scene 4 (AWS): Scene Code",
                  "type": "string",
                  "description": "Enter a scene code from the logs to create a button named 'Scene 4' (in Eve app).",
                  "condition": {
                    "functionBody": "return (model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23 && !['switch'].includes(model.lightDevices[arrayIndices].showAs) && !model.lightDevices[arrayIndices].ignoreDevice);"
                  }
                },
                "bleCode": {
                  "title": "Scene 4 (BLE): Scene Code",
                  "type": "string",
                  "description": "Can be (1) left blank, (2) used instead of, or (3) used along with the above AWS code. In the case of (3) please make sure both codes correspond to the same Govee mode.",
                  "condition": {
                    "functionBody": "return (model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23 && !['switch'].includes(model.lightDevices[arrayIndices].showAs) && !model.lightDevices[arrayIndices].ignoreDevice);"
                  }
                },
                "showAs": {
                  "type": "string",
                  "title": "Scene 4: Show As",
                  "description": "Change this setting to Accessory Switch to show this as an extra switch in the Home app.",
                  "oneOf": [
                    {
                      "title": "Eve Switch (Default)",
                      "enum": [
                        "default"
                      ]
                    },
                    {
                      "title": "Accessory Switch",
                      "enum": [
                        "switch"
                      ]
                    }
                  ],
                  "condition": {
                    "functionBody": "return (model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23 && !['switch'].includes(model.lightDevices[arrayIndices].showAs) && !model.lightDevices[arrayIndices].ignoreDevice && model.lightDevices[arrayIndices].sceneFour && (model.lightDevices[arrayIndices].sceneFour.sceneCode || model.lightDevices[arrayIndices].sceneFour.bleCode));"
                  }
                }
              }
            },
            "musicMode": {
              "title": "Music Mode",
              "type": "object",
              "properties": {
                "sceneCode": {
                  "title": "Music Mode (AWS): Scene Code",
                  "type": "string",
                  "description": "Enter a scene code from the logs to create a button named 'Music Mode' (in Eve app).",
                  "condition": {
                    "functionBody": "return (model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23 && !['switch'].includes(model.lightDevices[arrayIndices].showAs) && !model.lightDevices[arrayIndices].ignoreDevice);"
                  }
                },
                "bleCode": {
                  "title": "Music Mode (BLE): Scene Code",
                  "type": "string",
                  "description": "Can be (1) left blank, (2) used instead of, or (3) used along with the above AWS code. In the case of (3) please make sure both codes correspond to the same Govee mode.",
                  "condition": {
                    "functionBody": "return (model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23 && !['switch'].includes(model.lightDevices[arrayIndices].showAs) && !model.lightDevices[arrayIndices].ignoreDevice);"
                  }
                },
                "showAs": {
                  "type": "string",
                  "title": "Music Mode: Show As",
                  "description": "Change this setting to Accessory Switch to show this as an extra switch in the Home app.",
                  "oneOf": [
                    {
                      "title": "Eve Switch (Default)",
                      "enum": [
                        "default"
                      ]
                    },
                    {
                      "title": "Accessory Switch",
                      "enum": [
                        "switch"
                      ]
                    }
                  ],
                  "condition": {
                    "functionBody": "return (model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23 && !['switch'].includes(model.lightDevices[arrayIndices].showAs) && !model.lightDevices[arrayIndices].ignoreDevice && model.lightDevices[arrayIndices].musicMode && (model.lightDevices[arrayIndices].musicMode.sceneCode || model.lightDevices[arrayIndices].musicMode.bleCode));"
                  }
                }
              }
            },
            "musicModeTwo": {
              "title": "Music Mode 2",
              "type": "object",
              "properties": {
                "sceneCode": {
                  "title": "Music Mode 2 (AWS): Scene Code",
                  "type": "string",
                  "description": "Enter a scene code from the logs to create a button named 'Music Mode 2' (in Eve app).",
                  "condition": {
                    "functionBody": "return (model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23 && !['switch'].includes(model.lightDevices[arrayIndices].showAs) && !model.lightDevices[arrayIndices].ignoreDevice);"
                  }
                },
                "bleCode": {
                  "title": "Music Mode 2 (BLE): Scene Code",
                  "type": "string",
                  "description": "Can be (1) left blank, (2) used instead of, or (3) used along with the above AWS code. In the case of (3) please make sure both codes correspond to the same Govee mode.",
                  "condition": {
                    "functionBody": "return (model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23 && !['switch'].includes(model.lightDevices[arrayIndices].showAs) && !model.lightDevices[arrayIndices].ignoreDevice);"
                  }
                },
                "showAs": {
                  "type": "string",
                  "title": "Music Mode 2: Show As",
                  "description": "Change this setting to Accessory Switch to show this as an extra switch in the Home app.",
                  "oneOf": [
                    {
                      "title": "Eve Switch (Default)",
                      "enum": [
                        "default"
                      ]
                    },
                    {
                      "title": "Accessory Switch",
                      "enum": [
                        "switch"
                      ]
                    }
                  ],
                  "condition": {
                    "functionBody": "return (model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23 && !['switch'].includes(model.lightDevices[arrayIndices].showAs) && !model.lightDevices[arrayIndices].ignoreDevice && model.lightDevices[arrayIndices].musicModeTwo && (model.lightDevices[arrayIndices].musicModeTwo.sceneCode || model.lightDevices[arrayIndices].musicModeTwo.bleCode));"
                  }
                }
              }
            },
            "videoMode": {
              "title": "Video Mode",
              "type": "object",
              "properties": {
                "sceneCode": {
                  "title": "Video Mode (AWS): Scene Code",
                  "type": "string",
                  "description": "Enter a scene code from the logs to create a button named 'Video Mode' (in Eve app).",
                  "condition": {
                    "functionBody": "return (model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23 && !['switch'].includes(model.lightDevices[arrayIndices].showAs) && !model.lightDevices[arrayIndices].ignoreDevice);"
                  }
                },
                "bleCode": {
                  "title": "Video Mode (BLE): Scene Code",
                  "type": "string",
                  "description": "Can be (1) left blank, (2) used instead of, or (3) used along with the above AWS code. In the case of (3) please make sure both codes correspond to the same Govee mode.",
                  "condition": {
                    "functionBody": "return (model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23 && !['switch'].includes(model.lightDevices[arrayIndices].showAs) && !model.lightDevices[arrayIndices].ignoreDevice);"
                  }
                },
                "showAs": {
                  "type": "string",
                  "title": "Video Mode: Show As",
                  "description": "Change this setting to Accessory Switch to show this as an extra switch in the Home app.",
                  "oneOf": [
                    {
                      "title": "Eve Switch (Default)",
                      "enum": [
                        "default"
                      ]
                    },
                    {
                      "title": "Accessory Switch",
                      "enum": [
                        "switch"
                      ]
                    }
                  ],
                  "condition": {
                    "functionBody": "return (model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23 && !['switch'].includes(model.lightDevices[arrayIndices].showAs) && !model.lightDevices[arrayIndices].ignoreDevice && model.lightDevices[arrayIndices].videoMode && (model.lightDevices[arrayIndices].videoMode.sceneCode || model.lightDevices[arrayIndices].videoMode.bleCode));"
                  }
                }
              }
            },
            "videoModeTwo": {
              "title": "Video Mode 2",
              "type": "object",
              "properties": {
                "sceneCode": {
                  "title": "Video Mode 2 (AWS): Scene Code",
                  "type": "string",
                  "description": "Enter a scene code from the logs to create a button named 'Video Mode 2' (in Eve app).",
                  "condition": {
                    "functionBody": "return (model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23 && !['switch'].includes(model.lightDevices[arrayIndices].showAs) && !model.lightDevices[arrayIndices].ignoreDevice);"
                  }
                },
                "bleCode": {
                  "title": "Video Mode 2 (BLE): Scene Code",
                  "type": "string",
                  "description": "Can be (1) left blank, (2) used instead of, or (3) used along with the above AWS code. In the case of (3) please make sure both codes correspond to the same Govee mode.",
                  "condition": {
                    "functionBody": "return (model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23 && !['switch'].includes(model.lightDevices[arrayIndices].showAs) && !model.lightDevices[arrayIndices].ignoreDevice);"
                  }
                },
                "showAs": {
                  "type": "string",
                  "title": "Video Mode 2: Show As",
                  "description": "Change this setting to Accessory Switch to show this as an extra switch in the Home app.",
                  "oneOf": [
                    {
                      "title": "Eve Switch (Default)",
                      "enum": [
                        "default"
                      ]
                    },
                    {
                      "title": "Accessory Switch",
                      "enum": [
                        "switch"
                      ]
                    }
                  ],
                  "condition": {
                    "functionBody": "return (model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23 && !['switch'].includes(model.lightDevices[arrayIndices].showAs) && !model.lightDevices[arrayIndices].ignoreDevice && model.lightDevices[arrayIndices].videoModeTwo && (model.lightDevices[arrayIndices].videoModeTwo.sceneCode || model.lightDevices[arrayIndices].videoModeTwo.bleCode));"
                  }
                }
              }
            },
            "diyMode": {
              "title": "DIY Mode",
              "type": "object",
              "properties": {
                "sceneCode": {
                  "title": "DIY Mode (AWS): Scene Code",
                  "type": "string",
                  "description": "Enter a scene code from the logs to create a button named 'DIY Mode' (in Eve app).",
                  "condition": {
                    "functionBody": "return (model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23 && !['switch'].includes(model.lightDevices[arrayIndices].showAs) && !model.lightDevices[arrayIndices].ignoreDevice);"
                  }
                },
                "bleCode": {
                  "title": "DIY Mode (BLE): Scene Code",
                  "type": "string",
                  "description": "Can be (1) left blank, (2) used instead of, or (3) used along with the above AWS code. In the case of (3) please make sure both codes correspond to the same Govee mode.",
                  "condition": {
                    "functionBody": "return (model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23 && !['switch'].includes(model.lightDevices[arrayIndices].showAs) && !model.lightDevices[arrayIndices].ignoreDevice);"
                  }
                },
                "showAs": {
                  "type": "string",
                  "title": "DIY Mode: Show As",
                  "description": "Change this setting to Accessory Switch to show this as an extra switch in the Home app.",
                  "oneOf": [
                    {
                      "title": "Eve Switch (Default)",
                      "enum": [
                        "default"
                      ]
                    },
                    {
                      "title": "Accessory Switch",
                      "enum": [
                        "switch"
                      ]
                    }
                  ],
                  "condition": {
                    "functionBody": "return (model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23 && !['switch'].includes(model.lightDevices[arrayIndices].showAs) && !model.lightDevices[arrayIndices].ignoreDevice && model.lightDevices[arrayIndices].diyMode && (model.lightDevices[arrayIndices].diyMode.sceneCode || model.lightDevices[arrayIndices].diyMode.bleCode));"
                  }
                }
              }
            },
            "diyModeTwo": {
              "title": "DIY Mode 2",
              "type": "object",
              "properties": {
                "sceneCode": {
                  "title": "DIY Mode 2 (AWS): Scene Code",
                  "type": "string",
                  "description": "Enter a scene code from the logs to create a button named 'DIY Mode 2' (in Eve app).",
                  "condition": {
                    "functionBody": "return (model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23 && !['switch'].includes(model.lightDevices[arrayIndices].showAs) && !model.lightDevices[arrayIndices].ignoreDevice);"
                  }
                },
                "bleCode": {
                  "title": "DIY Mode 2 (BLE): Scene Code",
                  "type": "string",
                  "description": "Can be (1) left blank, (2) used instead of, or (3) used along with the above AWS code. In the case of (3) please make sure both codes correspond to the same Govee mode.",
                  "condition": {
                    "functionBody": "return (model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23 && !['switch'].includes(model.lightDevices[arrayIndices].showAs) && !model.lightDevices[arrayIndices].ignoreDevice);"
                  }
                },
                "showAs": {
                  "type": "string",
                  "title": "DIY Mode 2: Show As",
                  "description": "Change this setting to Accessory Switch to show this as an extra switch in the Home app.",
                  "oneOf": [
                    {
                      "title": "Eve Switch (Default)",
                      "enum": [
                        "default"
                      ]
                    },
                    {
                      "title": "Accessory Switch",
                      "enum": [
                        "switch"
                      ]
                    }
                  ],
                  "condition": {
                    "functionBody": "return (model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23 && !['switch'].includes(model.lightDevices[arrayIndices].showAs) && !model.lightDevices[arrayIndices].ignoreDevice && model.lightDevices[arrayIndices].diyModeTwo && (model.lightDevices[arrayIndices].diyModeTwo.sceneCode || model.lightDevices[arrayIndices].diyModeTwo.bleCode));"
                  }
                }
              }
            },
            "diyModeThree": {
              "title": "DIY Mode 3",
              "type": "object",
              "properties": {
                "sceneCode": {
                  "title": "DIY Mode 3 (AWS): Scene Code",
                  "type": "string",
                  "description": "Enter a scene code from the logs to create a button named 'DIY Mode 3' (in Eve app).",
                  "condition": {
                    "functionBody": "return (model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23 && !['switch'].includes(model.lightDevices[arrayIndices].showAs) && !model.lightDevices[arrayIndices].ignoreDevice);"
                  }
                },
                "bleCode": {
                  "title": "DIY Mode 3 (BLE): Scene Code",
                  "type": "string",
                  "description": "Can be (1) left blank, (2) used instead of, or (3) used along with the above AWS code. In the case of (3) please make sure both codes correspond to the same Govee mode.",
                  "condition": {
                    "functionBody": "return (model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23 && !['switch'].includes(model.lightDevices[arrayIndices].showAs) && !model.lightDevices[arrayIndices].ignoreDevice);"
                  }
                },
                "showAs": {
                  "type": "string",
                  "title": "DIY Mode 3: Show As",
                  "description": "Change this setting to Accessory Switch to show this as an extra switch in the Home app.",
                  "oneOf": [
                    {
                      "title": "Eve Switch (Default)",
                      "enum": [
                        "default"
                      ]
                    },
                    {
                      "title": "Accessory Switch",
                      "enum": [
                        "switch"
                      ]
                    }
                  ],
                  "condition": {
                    "functionBody": "return (model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23 && !['switch'].includes(model.lightDevices[arrayIndices].showAs) && !model.lightDevices[arrayIndices].ignoreDevice && model.lightDevices[arrayIndices].diyModeThree && (model.lightDevices[arrayIndices].diyModeThree.sceneCode || model.lightDevices[arrayIndices].diyModeThree.bleCode));"
                  }
                }
              }
            },
            "diyModeFour": {
              "title": "DIY Mode 4",
              "type": "object",
              "properties": {
                "sceneCode": {
                  "title": "DIY Mode 4 (AWS): Scene Code",
                  "type": "string",
                  "description": "Enter a scene code from the logs to create a button named 'DIY Mode 4' (in Eve app).",
                  "condition": {
                    "functionBody": "return (model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23 && !['switch'].includes(model.lightDevices[arrayIndices].showAs) && !model.lightDevices[arrayIndices].ignoreDevice);"
                  }
                },
                "bleCode": {
                  "title": "DIY Mode 4 (BLE): Scene Code",
                  "type": "string",
                  "description": "Can be (1) left blank, (2) used instead of, or (3) used along with the above AWS code. In the case of (3) please make sure both codes correspond to the same Govee mode.",
                  "condition": {
                    "functionBody": "return (model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23 && !['switch'].includes(model.lightDevices[arrayIndices].showAs) && !model.lightDevices[arrayIndices].ignoreDevice);"
                  }
                },
                "showAs": {
                  "type": "string",
                  "title": "DIY Mode 4: Show As",
                  "description": "Change this setting to Accessory Switch to show this as an extra switch in the Home app.",
                  "oneOf": [
                    {
                      "title": "Eve Switch (Default)",
                      "enum": [
                        "default"
                      ]
                    },
                    {
                      "title": "Accessory Switch",
                      "enum": [
                        "switch"
                      ]
                    }
                  ],
                  "condition": {
                    "functionBody": "return (model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23 && !['switch'].includes(model.lightDevices[arrayIndices].showAs) && !model.lightDevices[arrayIndices].ignoreDevice && model.lightDevices[arrayIndices].diyModeFour && (model.lightDevices[arrayIndices].diyModeFour.sceneCode || model.lightDevices[arrayIndices].diyModeFour.bleCode));"
                  }
                }
              }
            },
            "segmented": {
              "title": "Segmented",
              "type": "object",
              "properties": {
                "sceneCode": {
                  "title": "Segmented (AWS): Scene Code",
                  "type": "string",
                  "description": "Enter a scene code from the logs to create a button named 'Segmented' (in Eve app).",
                  "condition": {
                    "functionBody": "return (model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23 && !['switch'].includes(model.lightDevices[arrayIndices].showAs) && !model.lightDevices[arrayIndices].ignoreDevice);"
                  }
                },
                "bleCode": {
                  "title": "Segmented (BLE): Scene Code",
                  "type": "string",
                  "description": "Can be (1) left blank, (2) used instead of, or (3) used along with the above AWS code. In the case of (3) please make sure both codes correspond to the same Govee mode.",
                  "condition": {
                    "functionBody": "return (model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23 && !['switch'].includes(model.lightDevices[arrayIndices].showAs) && !model.lightDevices[arrayIndices].ignoreDevice);"
                  }
                },
                "showAs": {
                  "type": "string",
                  "title": "Segmented: Show As",
                  "description": "Change this setting to Accessory Switch to show this as an extra switch in the Home app.",
                  "oneOf": [
                    {
                      "title": "Eve Switch (Default)",
                      "enum": [
                        "default"
                      ]
                    },
                    {
                      "title": "Accessory Switch",
                      "enum": [
                        "switch"
                      ]
                    }
                  ],
                  "condition": {
                    "functionBody": "return (model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23 && !['switch'].includes(model.lightDevices[arrayIndices].showAs) && !model.lightDevices[arrayIndices].ignoreDevice && model.lightDevices[arrayIndices].segmented && (model.lightDevices[arrayIndices].segmented.sceneCode || model.lightDevices[arrayIndices].segmented.bleCode));"
                  }
                }
              }
            },
            "segmentedTwo": {
              "title": "Segmented 2",
              "type": "object",
              "properties": {
                "sceneCode": {
                  "title": "Segmented 2 (AWS): Scene Code",
                  "type": "string",
                  "description": "Enter a scene code from the logs to create a button named 'Segmented 2' (in Eve app).",
                  "condition": {
                    "functionBody": "return (model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23 && !['switch'].includes(model.lightDevices[arrayIndices].showAs) && !model.lightDevices[arrayIndices].ignoreDevice);"
                  }
                },
                "bleCode": {
                  "title": "Segmented 2 (BLE): Scene Code",
                  "type": "string",
                  "description": "Can be (1) left blank, (2) used instead of, or (3) used along with the above AWS code. In the case of (3) please make sure both codes correspond to the same Govee mode.",
                  "condition": {
                    "functionBody": "return (model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23 && !['switch'].includes(model.lightDevices[arrayIndices].showAs) && !model.lightDevices[arrayIndices].ignoreDevice);"
                  }
                },
                "showAs": {
                  "type": "string",
                  "title": "Segmented 2: Show As",
                  "description": "Change this setting to Accessory Switch to show this as an extra switch in the Home app.",
                  "oneOf": [
                    {
                      "title": "Eve Switch (Default)",
                      "enum": [
                        "default"
                      ]
                    },
                    {
                      "title": "Accessory Switch",
                      "enum": [
                        "switch"
                      ]
                    }
                  ],
                  "condition": {
                    "functionBody": "return (model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23 && !['switch'].includes(model.lightDevices[arrayIndices].showAs) && !model.lightDevices[arrayIndices].ignoreDevice && model.lightDevices[arrayIndices].segmentedTwo && (model.lightDevices[arrayIndices].segmentedTwo.sceneCode || model.lightDevices[arrayIndices].segmentedTwo.bleCode));"
                  }
                }
              }
            },
            "segmentedThree": {
              "title": "Segmented 3",
              "type": "object",
              "properties": {
                "sceneCode": {
                  "title": "Segmented 3 (AWS): Scene Code",
                  "type": "string",
                  "description": "Enter a scene code from the logs to create a button named 'Segmented 3' (in Eve app).",
                  "condition": {
                    "functionBody": "return (model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23 && !['switch'].includes(model.lightDevices[arrayIndices].showAs) && !model.lightDevices[arrayIndices].ignoreDevice);"
                  }
                },
                "bleCode": {
                  "title": "Segmented 3 (BLE): Scene Code",
                  "type": "string",
                  "description": "Can be (1) left blank, (2) used instead of, or (3) used along with the above AWS code. In the case of (3) please make sure both codes correspond to the same Govee mode.",
                  "condition": {
                    "functionBody": "return (model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23 && !['switch'].includes(model.lightDevices[arrayIndices].showAs) && !model.lightDevices[arrayIndices].ignoreDevice);"
                  }
                },
                "showAs": {
                  "type": "string",
                  "title": "Segmented 3: Show As",
                  "description": "Change this setting to Accessory Switch to show this as an extra switch in the Home app.",
                  "oneOf": [
                    {
                      "title": "Eve Switch (Default)",
                      "enum": [
                        "default"
                      ]
                    },
                    {
                      "title": "Accessory Switch",
                      "enum": [
                        "switch"
                      ]
                    }
                  ],
                  "condition": {
                    "functionBody": "return (model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23 && !['switch'].includes(model.lightDevices[arrayIndices].showAs) && !model.lightDevices[arrayIndices].ignoreDevice && model.lightDevices[arrayIndices].segmentedThree && (model.lightDevices[arrayIndices].segmentedThree.sceneCode || model.lightDevices[arrayIndices].segmentedThree.bleCode));"
                  }
                }
              }
            },
            "segmentedFour": {
              "title": "Segmented 4",
              "type": "object",
              "properties": {
                "sceneCode": {
                  "title": "Segmented 4 (AWS): Scene Code",
                  "type": "string",
                  "description": "Enter a scene code from the logs to create a button named 'Segmented 4' (in Eve app).",
                  "condition": {
                    "functionBody": "return (model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23 && !['switch'].includes(model.lightDevices[arrayIndices].showAs) && !model.lightDevices[arrayIndices].ignoreDevice);"
                  }
                },
                "bleCode": {
                  "title": "Segmented 4 (BLE): Scene Code",
                  "type": "string",
                  "description": "Can be (1) left blank, (2) used instead of, or (3) used along with the above AWS code. In the case of (3) please make sure both codes correspond to the same Govee mode.",
                  "condition": {
                    "functionBody": "return (model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23 && !['switch'].includes(model.lightDevices[arrayIndices].showAs) && !model.lightDevices[arrayIndices].ignoreDevice);"
                  }
                },
                "showAs": {
                  "type": "string",
                  "title": "Segmented 4: Show As",
                  "description": "Change this setting to Accessory Switch to show this as an extra switch in the Home app.",
                  "oneOf": [
                    {
                      "title": "Eve Switch (Default)",
                      "enum": [
                        "default"
                      ]
                    },
                    {
                      "title": "Accessory Switch",
                      "enum": [
                        "switch"
                      ]
                    }
                  ],
                  "condition": {
                    "functionBody": "return (model.lightDevices && model.lightDevices[arrayIndices] && model.lightDevices[arrayIndices].deviceId && model.lightDevices[arrayIndices].deviceId.length === 23 && !['switch'].includes(model.lightDevices[arrayIndices].showAs) && !model.lightDevices[arrayIndices].ignoreDevice && model.lightDevices[arrayIndices].segmentedFour && (model.lightDevices[arrayIndices].segmentedFour.sceneCode || model.lightDevices[arrayIndices].segmentedFour.bleCode));"
                  }
                }
              }
            }
          }
        }
      },
      "switchDevices": {
        "title": "Outlet Devices",
        "description": "Optional settings for Govee Outlet devices.",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "label": {
              "title": "Label",
              "type": "string",
              "description": "This setting is only used for config identification."
            },
            "deviceId": {
              "title": "Device ID",
              "type": "string",
              "description": "Enter the 23 digit Govee Device ID to begin (e.g. 12:AB:A1:C5:A8:99:D2:17).",
              "minLength": 23,
              "maxLength": 23
            },
            "ignoreDevice": {
              "type": "boolean",
              "title": "Hide From HomeKit",
              "description": "If true, this accessory will be removed and ignored from HomeKit.",
              "condition": {
                "functionBody": "return (model.switchDevices && model.switchDevices[arrayIndices] && model.switchDevices[arrayIndices].deviceId && model.switchDevices[arrayIndices].deviceId.length === 23);"
              }
            },
            "showAs": {
              "type": "string",
              "title": "Show As",
              "oneOf": [
                {
                  "title": "1 Outlet (Default)",
                  "enum": [
                    "default"
                  ]
                },
                {
                  "title": "1 Switch",
                  "enum": [
                    "switch"
                  ]
                },
                {
                  "title": "1 Air Purifier",
                  "enum": [
                    "purifier"
                  ]
                },
                {
                  "title": "1 Heater",
                  "enum": [
                    "heater"
                  ]
                },
                {
                  "title": "1 Cooler",
                  "enum": [
                    "cooler"
                  ]
                },
                {
                  "title": "1 Tap/Faucet",
                  "enum": [
                    "tap"
                  ]
                },
                {
                  "title": "1 Valve",
                  "enum": [
                    "valve"
                  ]
                },
                {
                  "title": "1 Audio Receiver (External Accessory)",
                  "enum": [
                    "audio"
                  ]
                },
                {
                  "title": "1 Set Top Box (External Accessory)",
                  "enum": [
                    "box"
                  ]
                },
                {
                  "title": "1 Streaming Stick (External Accessory)",
                  "enum": [
                    "stick"
                  ]
                }
              ],
              "condition": {
                "functionBody": "return (model.switchDevices && model.switchDevices[arrayIndices] && model.switchDevices[arrayIndices].deviceId && model.switchDevices[arrayIndices].deviceId.length === 23 && !model.switchDevices[arrayIndices].ignoreDevice);"
              }
            },
            "temperatureSource": {
              "type": "string",
              "title": "Temperature Sensor ID",
              "description": "Enter a Govee, eWeLink or Meross device ID which provides a current temperature reading.",
              "condition": {
                "functionBody": "return (model.switchDevices && model.switchDevices[arrayIndices] && model.switchDevices[arrayIndices].deviceId && model.switchDevices[arrayIndices].deviceId.length === 23 && ['heater', 'cooler'].includes(model.switchDevices[arrayIndices].showAs) && !model.switchDevices[arrayIndices].ignoreDevice);"
              }
            }
          }
        }
      },
      "leakDevices": {
        "title": "Leak Sensor Devices",
        "description": "Optional settings for Govee Leak Sensor devices.",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "label": {
              "title": "Label",
              "type": "string",
              "description": "This setting is only used for config identification."
            },
            "deviceId": {
              "title": "Device ID",
              "type": "string",
              "description": "Enter the 18 digit Govee Device ID to begin (e.g. 12AB34CD56EF78009F).",
              "minLength": 18,
              "maxLength": 18
            },
            "ignoreDevice": {
              "type": "boolean",
              "title": "Hide From HomeKit",
              "description": "If true, this accessory will be removed and ignored from HomeKit.",
              "condition": {
                "functionBody": "return (model.leakDevices && model.leakDevices[arrayIndices] && model.leakDevices[arrayIndices].deviceId && model.leakDevices[arrayIndices].deviceId.length === 18);"
              }
            },
            "lowBattThreshold": {
              "type": "integer",
              "title": "Low Battery Threshold",
              "description": "HomeKit will set the low battery status for this device when the battery reaches this percentage level. Must be 1 or more.",
              "placeholder": 20,
              "minimum": 1,
              "condition": {
                "functionBody": "return (model.leakDevices && model.leakDevices[arrayIndices] && model.leakDevices[arrayIndices].deviceId && model.leakDevices[arrayIndices].deviceId.length === 18 && !model.leakDevices[arrayIndices].ignoreDevice);"
              }
            }
          }
        }
      },
      "thermoDevices": {
        "title": "Thermo Sensor Devices",
        "description": "Optional settings for Govee Thermo-Hygrometer devices.",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "label": {
              "title": "Label",
              "type": "string",
              "description": "This setting is only used for config identification."
            },
            "deviceId": {
              "title": "Device ID",
              "type": "string",
              "description": "Enter the 23/26 digit Govee Device ID to begin (e.g. 12:AB:A1:C5:A8:99:D2:17).",
              "minLength": 23,
              "maxLength": 26
            },
            "ignoreDevice": {
              "type": "boolean",
              "title": "Hide From HomeKit",
              "description": "If true, this accessory will be removed and ignored from HomeKit.",
              "condition": {
                "functionBody": "return (model.thermoDevices && model.thermoDevices[arrayIndices] && model.thermoDevices[arrayIndices].deviceId && [23,26].includes(model.thermoDevices[arrayIndices].deviceId.length));"
              }
            },
            "lowBattThreshold": {
              "type": "integer",
              "title": "Low Battery Threshold",
              "description": "HomeKit will set the low battery status for this device when the battery reaches this percentage level. Must be 1 or more.",
              "placeholder": 20,
              "minimum": 1,
              "condition": {
                "functionBody": "return (model.thermoDevices && model.thermoDevices[arrayIndices] && model.thermoDevices[arrayIndices].deviceId && [23,26].includes(model.thermoDevices[arrayIndices].deviceId.length) && !model.thermoDevices[arrayIndices].ignoreDevice);"
              }
            }
          }
        }
      },
      "fanDevices": {
        "title": "Fan Devices",
        "description": "Optional settings for Govee Fan devices.",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "label": {
              "title": "Label",
              "type": "string",
              "description": "This setting is only used for config identification."
            },
            "deviceId": {
              "title": "Device ID",
              "type": "string",
              "description": "Enter the 23 digit Govee Device ID to begin (e.g. 12:AB:A1:C5:A8:99:D2:17).",
              "minLength": 23,
              "maxLength": 23
            },
            "ignoreDevice": {
              "type": "boolean",
              "title": "Hide From HomeKit",
              "description": "If true, this accessory will be removed and ignored from HomeKit.",
              "condition": {
                "functionBody": "return (model.fanDevices && model.fanDevices[arrayIndices] && model.fanDevices[arrayIndices].deviceId && model.fanDevices[arrayIndices].deviceId.length === 23);"
              }
            }
          }
        }
      },
      "heaterDevices": {
        "title": "Heater Devices",
        "description": "Optional settings for Govee Heater devices.",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "label": {
              "title": "Label",
              "type": "string",
              "description": "This setting is only used for config identification."
            },
            "deviceId": {
              "title": "Device ID",
              "type": "string",
              "description": "Enter the 23 digit Govee Device ID to begin (e.g. 12:AB:A1:C5:A8:99:D2:17).",
              "minLength": 23,
              "maxLength": 23
            },
            "ignoreDevice": {
              "type": "boolean",
              "title": "Hide From HomeKit",
              "description": "If true, this accessory will be removed and ignored from HomeKit.",
              "condition": {
                "functionBody": "return (model.heaterDevices && model.heaterDevices[arrayIndices] && model.heaterDevices[arrayIndices].deviceId && model.heaterDevices[arrayIndices].deviceId.length === 23);"
              }
            },
            "tempReporting": {
              "type": "boolean",
              "title": "Temperature Reporting",
              "description": "Enable this if your H7130 device reports ambient temperature.",
              "condition": {
                "functionBody": "return (model.heaterDevices && model.heaterDevices[arrayIndices] && model.heaterDevices[arrayIndices].deviceId && model.heaterDevices[arrayIndices].deviceId.length === 23);"
              }
            }
          }
        }
      },
      "humidifierDevices": {
        "title": "Humidifier Devices",
        "description": "Optional settings for Govee Humidifier devices.",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "label": {
              "title": "Label",
              "type": "string",
              "description": "This setting is only used for config identification."
            },
            "deviceId": {
              "title": "Device ID",
              "type": "string",
              "description": "Enter the 23 digit Govee Device ID to begin (e.g. 12:AB:A1:C5:A8:99:D2:17).",
              "minLength": 23,
              "maxLength": 23
            },
            "ignoreDevice": {
              "type": "boolean",
              "title": "Hide From HomeKit",
              "description": "If true, this accessory will be removed and ignored from HomeKit.",
              "condition": {
                "functionBody": "return (model.humidifierDevices && model.humidifierDevices[arrayIndices] && model.humidifierDevices[arrayIndices].deviceId && model.humidifierDevices[arrayIndices].deviceId.length === 23);"
              }
            }
          }
        }
      },
      "dehumidifierDevices": {
        "title": "Dehumidifier Devices",
        "description": "Optional settings for Govee Dehumidifier devices.",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "label": {
              "title": "Label",
              "type": "string",
              "description": "This setting is only used for config identification."
            },
            "deviceId": {
              "title": "Device ID",
              "type": "string",
              "description": "Enter the 23 digit Govee Device ID to begin (e.g. 12:AB:A1:C5:A8:99:D2:17).",
              "minLength": 23,
              "maxLength": 23
            },
            "ignoreDevice": {
              "type": "boolean",
              "title": "Hide From HomeKit",
              "description": "If true, this accessory will be removed and ignored from HomeKit.",
              "condition": {
                "functionBody": "return (model.dehumidifierDevices && model.dehumidifierDevices[arrayIndices] && model.dehumidifierDevices[arrayIndices].deviceId && model.dehumidifierDevices[arrayIndices].deviceId.length === 23);"
              }
            }
          }
        }
      },
      "purifierDevices": {
        "title": "Purifier Devices",
        "description": "Optional settings for Govee Purifier devices.",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "label": {
              "title": "Label",
              "type": "string",
              "description": "This setting is only used for config identification."
            },
            "deviceId": {
              "title": "Device ID",
              "type": "string",
              "description": "Enter the 23 digit Govee Device ID to begin (e.g. 12:AB:A1:C5:A8:99:D2:17).",
              "minLength": 23,
              "maxLength": 23
            },
            "ignoreDevice": {
              "type": "boolean",
              "title": "Hide From HomeKit",
              "description": "If true, this accessory will be removed and ignored from HomeKit.",
              "condition": {
                "functionBody": "return (model.purifierDevices && model.purifierDevices[arrayIndices] && model.purifierDevices[arrayIndices].deviceId && model.purifierDevices[arrayIndices].deviceId.length === 23);"
              }
            }
          }
        }
      },
      "diffuserDevices": {
        "title": "Diffuser Devices",
        "description": "Optional settings for Govee Diffuser devices.",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "label": {
              "title": "Label",
              "type": "string",
              "description": "This setting is only used for config identification."
            },
            "deviceId": {
              "title": "Device ID",
              "type": "string",
              "description": "Enter the 23 digit Govee Device ID to begin (e.g. 12:AB:A1:C5:A8:99:D2:17).",
              "minLength": 23,
              "maxLength": 23
            },
            "ignoreDevice": {
              "type": "boolean",
              "title": "Hide From HomeKit",
              "description": "If true, this accessory will be removed and ignored from HomeKit.",
              "condition": {
                "functionBody": "return (model.diffuserDevices && model.diffuserDevices[arrayIndices] && model.diffuserDevices[arrayIndices].deviceId && model.diffuserDevices[arrayIndices].deviceId.length === 23);"
              }
            }
          }
        }
      },
      "kettleDevices": {
        "title": "Kettle Devices",
        "description": "Optional settings for Govee Kettle devices.",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "label": {
              "title": "Label",
              "type": "string",
              "description": "This setting is only used for config identification."
            },
            "deviceId": {
              "title": "Device ID",
              "type": "string",
              "description": "Enter the 23 digit Govee Device ID to begin (e.g. 12:AB:A1:C5:A8:99:D2:17).",
              "minLength": 23,
              "maxLength": 23
            },
            "ignoreDevice": {
              "type": "boolean",
              "title": "Hide From HomeKit",
              "description": "If true, this accessory will be removed and ignored from HomeKit.",
              "condition": {
                "functionBody": "return (model.kettleDevices && model.kettleDevices[arrayIndices] && model.kettleDevices[arrayIndices].deviceId && model.kettleDevices[arrayIndices].deviceId.length === 23);"
              }
            },
            "hideModeGreenTea": {
              "type": "boolean",
              "title": "Hide Green Tea Mode",
              "description": "If true, the Green Tea mode switch will be hidden in HomeKit.",
              "condition": {
                "functionBody": "return (model.kettleDevices && model.kettleDevices[arrayIndices] && model.kettleDevices[arrayIndices].deviceId && model.kettleDevices[arrayIndices].deviceId.length === 23 && !model.kettleDevices[arrayIndices].ignoreDevice);"
              }
            },
            "hideModeOolongTea": {
              "type": "boolean",
              "title": "Hide Oolong Tea Mode",
              "description": "If true, the Oolong Tea mode switch will be hidden in HomeKit.",
              "condition": {
                "functionBody": "return (model.kettleDevices && model.kettleDevices[arrayIndices] && model.kettleDevices[arrayIndices].deviceId && model.kettleDevices[arrayIndices].deviceId.length === 23 && !model.kettleDevices[arrayIndices].ignoreDevice);"
              }
            },
            "hideModeCoffee": {
              "type": "boolean",
              "title": "Hide Coffee Mode",
              "description": "If true, the Coffee mode switch will be hidden in HomeKit.",
              "condition": {
                "functionBody": "return (model.kettleDevices && model.kettleDevices[arrayIndices] && model.kettleDevices[arrayIndices].deviceId && model.kettleDevices[arrayIndices].deviceId.length === 23 && !model.kettleDevices[arrayIndices].ignoreDevice);"
              }
            },
            "hideModeBlackTea": {
              "type": "boolean",
              "title": "Hide Back Tea/Boil Mode",
              "description": "If true, the Black Tea/Boil mode switch will be hidden in HomeKit.",
              "condition": {
                "functionBody": "return (model.kettleDevices && model.kettleDevices[arrayIndices] && model.kettleDevices[arrayIndices].deviceId && model.kettleDevices[arrayIndices].deviceId.length === 23 && !model.kettleDevices[arrayIndices].ignoreDevice);"
              }
            },
            "showCustomMode1": {
              "title": "Enable Custom Mode 1",
              "type": "boolean",
              "condition": {
                "functionBody": "return (model.kettleDevices && model.kettleDevices[arrayIndices] && model.kettleDevices[arrayIndices].deviceId && model.kettleDevices[arrayIndices].deviceId.length === 23 && !model.kettleDevices[arrayIndices].ignoreDevice);"
              }
            },
            "showCustomMode2": {
              "title": "Enable Custom Mode 2",
              "type": "boolean",
              "condition": {
                "functionBody": "return (model.kettleDevices && model.kettleDevices[arrayIndices] && model.kettleDevices[arrayIndices].deviceId && model.kettleDevices[arrayIndices].deviceId.length === 23 && !model.kettleDevices[arrayIndices].ignoreDevice);"
              }
            }
          }
        }
      },
      "iceMakerDevices": {
        "title": "Ice Maker Devices",
        "description": "Optional settings for Govee Ice Maker devices.",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "label": {
              "title": "Label",
              "type": "string",
              "description": "This setting is only used for config identification."
            },
            "deviceId": {
              "title": "Device ID",
              "type": "string",
              "description": "Enter the 23 digit Govee Device ID to begin (e.g. 12:AB:A1:C5:A8:99:D2:17).",
              "minLength": 23,
              "maxLength": 23
            },
            "ignoreDevice": {
              "type": "boolean",
              "title": "Hide From HomeKit",
              "description": "If true, this accessory will be removed and ignored from HomeKit.",
              "condition": {
                "functionBody": "return (model.iceMakerDevices && model.iceMakerDevices[arrayIndices] && model.iceMakerDevices[arrayIndices].deviceId && model.iceMakerDevices[arrayIndices].deviceId.length === 23);"
              }
            }
          }
        }
      }
    }
  },
  "layout": [
    {
      "type": "fieldset",
      "title": "Required Settings",
      "items": [
        "username",
        "password"
      ]
    },
    {
      "type": "fieldset",
      "title": "Advanced Settings",
      "description": "Advanced settings for the plugin, including interval options.",
      "expandable": true,
      "items": [
        "disableDeviceLogging",
        "httpRefreshTime",
        "awsDisable",
        "bleDisable",
        "bleRefreshTime",
        "lanDisable",
        "lanRefreshTime",
        "lanScanInterval",
        "bleControlInterval",
        "colourSafeMode"
      ]
    },
    {
      "key": "lightDevices",
      "expandable": true,
      "title": "Light Devices",
      "description": "Optional settings for Govee Light devices.",
      "add": "Add Another Device",
      "type": "array",
      "items": [
        {
          "type": "fieldset",
          "items": [
            "lightDevices[].label",
            "lightDevices[].deviceId",
            "lightDevices[].ignoreDevice",
            "lightDevices[].showAs",
            "lightDevices[].customAddress",
            "lightDevices[].customIPAddress",
            "lightDevices[].brightnessStep",
            "lightDevices[].awsBrightnessNoScale",
            "lightDevices[].adaptiveLightingShift",
            "lightDevices[].awsColourMode",
            {
              "expandable": true,
              "title": "Custom Scenes/Modes",
              "type": "fieldset",
              "description": "Use these settings to start creating HomeKit scenes with your Govee scenes, music mode and DIY modes. <a href=\"https://github.com/bwp91/homebridge-govee/wiki/Scene%2C-Music%2C-DIY-Modes\" target=\"_blank\">Read more →</a>",
              "items": [
                "lightDevices[].scene.sceneCode",
                "lightDevices[].scene.bleCode",
                "lightDevices[].scene.showAs",
                "lightDevices[].sceneTwo.sceneCode",
                "lightDevices[].sceneTwo.bleCode",
                "lightDevices[].sceneTwo.showAs",
                "lightDevices[].sceneThree.sceneCode",
                "lightDevices[].sceneThree.bleCode",
                "lightDevices[].sceneThree.showAs",
                "lightDevices[].sceneFour.sceneCode",
                "lightDevices[].sceneFour.bleCode",
                "lightDevices[].sceneFour.showAs",
                "lightDevices[].musicMode.sceneCode",
                "lightDevices[].musicMode.bleCode",
                "lightDevices[].musicMode.showAs",
                "lightDevices[].musicModeTwo.sceneCode",
                "lightDevices[].musicModeTwo.bleCode",
                "lightDevices[].musicModeTwo.showAs",
                "lightDevices[].videoMode.sceneCode",
                "lightDevices[].videoMode.bleCode",
                "lightDevices[].videoMode.showAs",
                "lightDevices[].videoModeTwo.sceneCode",
                "lightDevices[].videoModeTwo.bleCode",
                "lightDevices[].videoModeTwo.showAs",
                "lightDevices[].diyMode.sceneCode",
                "lightDevices[].diyMode.bleCode",
                "lightDevices[].diyMode.showAs",
                "lightDevices[].diyModeTwo.sceneCode",
                "lightDevices[].diyModeTwo.bleCode",
                "lightDevices[].diyModeTwo.showAs",
                "lightDevices[].diyModeThree.sceneCode",
                "lightDevices[].diyModeThree.bleCode",
                "lightDevices[].diyModeThree.showAs",
                "lightDevices[].diyModeFour.sceneCode",
                "lightDevices[].diyModeFour.bleCode",
                "lightDevices[].diyModeFour.showAs",
                "lightDevices[].segmented.sceneCode",
                "lightDevices[].segmented.bleCode",
                "lightDevices[].segmented.showAs",
                "lightDevices[].segmentedTwo.sceneCode",
                "lightDevices[].segmentedTwo.bleCode",
                "lightDevices[].segmentedTwo.showAs",
                "lightDevices[].segmentedThree.sceneCode",
                "lightDevices[].segmentedThree.bleCode",
                "lightDevices[].segmentedThree.showAs",
                "lightDevices[].segmentedFour.sceneCode",
                "lightDevices[].segmentedFour.bleCode",
                "lightDevices[].segmentedFour.showAs"
              ]
            }
          ]
        }
      ]
    },
    {
      "key": "switchDevices",
      "expandable": true,
      "title": "Outlet Devices",
      "description": "Optional settings for Govee Outlet devices.",
      "add": "Add Another Device",
      "type": "array",
      "items": [
        {
          "type": "fieldset",
          "items": [
            "switchDevices[].label",
            "switchDevices[].deviceId",
            "switchDevices[].ignoreDevice",
            "switchDevices[].showAs",
            "switchDevices[].temperatureSource"
          ]
        }
      ]
    },
    {
      "key": "leakDevices",
      "expandable": true,
      "title": "Leak Sensor Devices",
      "description": "Optional settings for Govee Leak Sensor devices.",
      "add": "Add Another Device",
      "type": "array",
      "items": [
        {
          "type": "fieldset",
          "items": [
            "leakDevices[].label",
            "leakDevices[].deviceId",
            "leakDevices[].lowBattThreshold",
            "leakDevices[].ignoreDevice"
          ]
        }
      ]
    },
    {
      "key": "thermoDevices",
      "expandable": true,
      "title": "Thermo Sensor Devices",
      "description": "Optional settings for Govee Thermo-Hygrometer devices.",
      "add": "Add Another Device",
      "type": "array",
      "items": [
        {
          "type": "fieldset",
          "items": [
            "thermoDevices[].label",
            "thermoDevices[].deviceId",
            "thermoDevices[].ignoreDevice",
            "thermoDevices[].lowBattThreshold"
          ]
        }
      ]
    },
    {
      "key": "fanDevices",
      "expandable": true,
      "title": "Fan Devices",
      "description": "Optional settings for Govee Fan devices.",
      "add": "Add Another Device",
      "type": "array",
      "items": [
        {
          "type": "fieldset",
          "items": [
            "fanDevices[].label",
            "fanDevices[].deviceId",
            "fanDevices[].ignoreDevice"
          ]
        }
      ]
    },
    {
      "key": "heaterDevices",
      "expandable": true,
      "title": "Heater Devices",
      "description": "Optional settings for Govee Heater devices.",
      "add": "Add Another Device",
      "type": "array",
      "items": [
        {
          "type": "fieldset",
          "items": [
            "heaterDevices[].label",
            "heaterDevices[].deviceId",
            "heaterDevices[].ignoreDevice",
            "heaterDevices[].tempReporting"
          ]
        }
      ]
    },
    {
      "key": "humidifierDevices",
      "expandable": true,
      "title": "Humidifier Devices",
      "description": "Optional settings for Govee Humidifier devices.",
      "add": "Add Another Device",
      "type": "array",
      "items": [
        {
          "type": "fieldset",
          "items": [
            "humidifierDevices[].label",
            "humidifierDevices[].deviceId",
            "humidifierDevices[].ignoreDevice"
          ]
        }
      ]
    },
    {
      "key": "dehumidifierDevices",
      "expandable": true,
      "title": "Dehumidifier Devices",
      "description": "Optional settings for Govee Dehumidifier devices.",
      "add": "Add Another Device",
      "type": "array",
      "items": [
        {
          "type": "fieldset",
          "items": [
            "dehumidifierDevices[].label",
            "dehumidifierDevices[].deviceId",
            "dehumidifierDevices[].ignoreDevice"
          ]
        }
      ]
    },
    {
      "key": "purifierDevices",
      "expandable": true,
      "title": "Purifier Devices",
      "description": "Optional settings for Govee Purifier devices.",
      "add": "Add Another Device",
      "type": "array",
      "items": [
        {
          "type": "fieldset",
          "items": [
            "purifierDevices[].label",
            "purifierDevices[].deviceId",
            "purifierDevices[].ignoreDevice"
          ]
        }
      ]
    },
    {
      "key": "diffuserDevices",
      "expandable": true,
      "title": "Diffuser Devices",
      "description": "Optional settings for Govee Diffuser devices.",
      "add": "Add Another Device",
      "type": "array",
      "items": [
        {
          "type": "fieldset",
          "items": [
            "diffuserDevices[].label",
            "diffuserDevices[].deviceId",
            "diffuserDevices[].ignoreDevice"
          ]
        }
      ]
    },
    {
      "key": "kettleDevices",
      "expandable": true,
      "title": "Kettle Devices",
      "description": "Optional settings for Govee Kettle devices.",
      "add": "Add Another Device",
      "type": "array",
      "items": [
        {
          "type": "fieldset",
          "items": [
            "kettleDevices[].label",
            "kettleDevices[].deviceId",
            "kettleDevices[].ignoreDevice",
            "kettleDevices[].hideModeGreenTea",
            "kettleDevices[].hideModeOolongTea",
            "kettleDevices[].hideModeCoffee",
            "kettleDevices[].hideModeBlackTea",
            "kettleDevices[].showCustomMode1",
            "kettleDevices[].showCustomMode2"
          ]
        }
      ]
    },
    {
      "key": "iceMakerDevices",
      "expandable": true,
      "title": "Ice Maker Devices",
      "description": "Optional settings for Govee Ice Maker devices.",
      "add": "Add Another Device",
      "type": "array",
      "items": [
        {
          "type": "fieldset",
          "items": [
            "iceMakerDevices[].label",
            "iceMakerDevices[].deviceId",
            "iceMakerDevices[].ignoreDevice"
          ]
        }
      ]
    }
  ]
}
